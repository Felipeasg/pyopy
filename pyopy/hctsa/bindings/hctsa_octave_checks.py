

OK_OPS_100 = [
    ('HCTSA_CO_AutoCorr', 0.314774),
    ('HCTSA_CO_CompareMinAMI', 0.860293),
    ('HCTSA_CO_Embed2', 0.237063),
    ('HCTSA_CO_Embed2_AngleTau', 0.489321),
    ('HCTSA_CO_Embed2_Basic', 0.257798),
    ('HCTSA_CO_FirstMin', 0.318148),
    ('HCTSA_CO_FirstZero', 0.259577),
    ('HCTSA_CO_HistogramAMI', 0.322865),
    ('HCTSA_CO_NonlinearAutocorr', 0.355741),
    ('HCTSA_CO_RM_AMInformation', 0.168869),
    ('HCTSA_CO_TranslateShape', 0.304838),
    ('HCTSA_CO_f1ecac', 0.257995),
    ('HCTSA_CO_fzcglscf', 0.174423),
    ('HCTSA_CO_glscf', 0.174779),
    ('HCTSA_CO_tc3', 0.154789),
    ('HCTSA_CO_trev', 0.18131),
    ('HCTSA_CP_ML_StepDetect', 0.270525),
    ('HCTSA_DN_Burstiness', 0.21968),
    ('HCTSA_DN_Cumulants', 0.251026),
    ('HCTSA_DN_CustomSkewness', 0.227249),
    ('HCTSA_DN_HighLowMu', 0.222676),
    ('HCTSA_DN_HistogramMode', 0.220088),
    ('HCTSA_DN_Mean', 0.22794),
    ('HCTSA_DN_MinMax', 0.217573),
    ('HCTSA_DN_Moments', 0.229429),
    ('HCTSA_DN_OutlierTest', 0.28358),
    ('HCTSA_DN_ProportionValues', 0.260174),
    ('HCTSA_DN_Quantile', 0.224731),
    ('HCTSA_DN_RemovePoints', 0.375261),
    ('HCTSA_DN_Spread', 0.254365),
    ('HCTSA_DN_Withinp', 0.224723),
    ('HCTSA_DN_cv', 0.221052),
    ('HCTSA_DN_pleft', 0.273548),
    ('HCTSA_EN_ApEn', 0.27858),
    ('HCTSA_EN_PermEn', 0.287837),
    ('HCTSA_EN_RM_entropy', 0.227431),
    ('HCTSA_EN_SampEn', 0.509281),
    ('HCTSA_EN_Shannonpdf', 0.210869),
    ('HCTSA_EN_TSentropy', 0.243272),
    ('HCTSA_EX_MovingThreshold', 0.347916),
    ('HCTSA_MD_pNN', 0.281912),
    ('HCTSA_MD_polvar', 0.877049),
    ('HCTSA_MD_rawHRVmeas', 0.291923),
    ('HCTSA_NL_MS_LZcomplexity', 0.329556),
    ('HCTSA_NL_MS_fnn', 0.424265),
    ('HCTSA_NL_TSTL_PoincareSection', 0.457477),
    ('HCTSA_PH_ForcePotential', 0.456114),
    ('HCTSA_RN_Gaussian', 0.266388),
    ('HCTSA_SB_BinaryStretch', 0.266346),
    ('HCTSA_SB_MotifTwo', 0.282224),
    ('HCTSA_SC_HurstExponent', 0.239589),
    ('HCTSA_SC_fastdfa', 0.254263),
    ('HCTSA_ST_Length', 0.212487),
    ('HCTSA_ST_SimpleStats', 0.311037),
    ('HCTSA_SY_DynWin', 1.33006),
    ('HCTSA_SY_LinearTrend', 0.252287),
    ('HCTSA_SY_LocalGlobal', 0.579442),
    ('HCTSA_SY_RangeEvolve', 0.257826),
    ('HCTSA_SY_SpreadRandomLocal', 1.19007),
    ('HCTSA_SY_StatAv', 0.209351),
    ('HCTSA_SY_StdNthDer', 0.265485),
]


FAILED_OPS_100 = [
    ("HCTSA_CO_AddNoise", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_CO_AutoCorrShape", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_CO_Embed2_Dist", "'expfit' undefined near line 96 column 5"),
    ("HCTSA_CO_Embed2_Shapes", "'poissfit' undefined near line 132 column 5"),
    ("HCTSA_CO_StickAngles", "This function requires Matlab's Signal Processing Toolbox"),
    ("HCTSA_CO_TSTL_AutoCorrMethod", "help: 'acf' not found"),
    ("HCTSA_CO_TSTL_amutual", "Input signal must be a scalar time series"),
    ("HCTSA_CO_TSTL_amutual2", "help: 'amutual2' not found"),
    ("HCTSA_CP_l1pwc_sweep_lambda", "warning: operator -: automatic broadcasting operation applied\nwarning: division by zero\nA(I) = X: X must have the same size as I"),
    ("HCTSA_CP_wavelet_varchg", "This function requires Matlab's Wavelet Toolbox"),
    ("HCTSA_DN_CompareKSFit", "'normfit' undefined near line 55 column 16"),
    ("HCTSA_DN_Compare_zscore", "'ksdensity' undefined near line 38 column 9"),
    ("HCTSA_DN_FitKernelSmooth", "'ksdensity' undefined near line 60 column 9"),
    ("HCTSA_DN_Fit_mle", "'mle' undefined near line 57 column 11"),
    ("HCTSA_DN_OutlierInclude", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_DN_SimpleFit", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_DN_TrimmedMean", "'trimmean' undefined near line 43 column 7"),
    ("HCTSA_DN_nlogL_norm", "'normfit' undefined near line 38 column 19"),
    ("HCTSA_DT_IsSeasonal", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_EN_DistributionEntropy", "'ksdensity' undefined near line 83 column 18"),
    ("HCTSA_EN_MS_shannon", "invalid index to scalar variable."),
    ("HCTSA_EN_Randomize", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_EN_wentropy", "'wentropy' undefined near line 62 column 15"),
    ("HCTSA_FC_LocalSimple", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_FC_LoopLocalSimple", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_FC_Surprise", "All values in the sequence were not assigned to a group"),
    ("HCTSA_HT_DistributionTest", "'betafit' undefined near line 71 column 13"),
    ("HCTSA_HT_HypothesisTest", "'runstest' undefined near line 58 column 16"),
    ("HCTSA_MD_hrv_classic", "'hann' undefined near line 82 column 24"),
    ("HCTSA_MF_ARMA_orders", "Enters Oct2Py interact mode"),
    ("HCTSA_MF_AR_arcov", "'arcov' undefined near line 49 column 8"),
    ("HCTSA_MF_CompareAR", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_CompareTestSets", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_ExpSmoothing", "Training set size below minimum of 100 -- increasing to this.\nwarning: operator -: automatic broadcasting operation applied\nA(I) = X: X must have the same size as I"),
    ("HCTSA_MF_FitSubsegments", "warning: iddata: more outputs than samples - matrice 'y' should probably be transposed\nThis function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_GARCHcompare", "This function requires Matlab's Econometrics Toolbox"),
    ("HCTSA_MF_GARCHfit", "This function requires Matlab's Econometrics Toolbox"),
    ("HCTSA_MF_GP_FitAcross", "sq_string cannot be indexed with {"),
    ("HCTSA_MF_GP_LearnHyperp", "matrix cannot be indexed with {"),
    ("HCTSA_MF_GP_LocalPrediction", "sq_string cannot be indexed with {"),
    ("HCTSA_MF_GP_hyperparameters", "warning: The input time series is not, but should be z-scored\nsq_string cannot be indexed with {"),
    ("HCTSA_MF_ResidualAnalysis", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_StateSpaceCompOrder", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_StateSpace_n4sid", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_arfit", "binary operator '*' not implemented for 'int64 matrix' by 'matrix' operations"),
    ("HCTSA_MF_armax", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_hmm_CompareNStates", "Data matrix length must be multiple of sequence length T"),
    ("HCTSA_MF_hmm_fit", "Data matrix length must be multiple of sequence length T"),
    ("HCTSA_MF_steps_ahead", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_NL_BoxCorrDim", "Embedding dimension, m, incorrectly specified."),
    ("HCTSA_NL_CaosMethod", "'cao' is a script from the file /home/santi/Proyectos/pyopy/pyopy/externals/toolboxes/hctsa/Toolboxes/OpenTSTOOL/tstoolbox/mex/cao.m\n\ntstoolbox/mex/cao\n   This mex-file applies Cao's method to the input data set. If the data\n   set contains points of dimension D, it computes E and E* for a data\n   set of dimension 1 (taken from the first column of the input data\n   set), then for a data set of dimension 2 (taken from the first two\n   columns) up to a dimension of D. Optionally, this algorithm extends\n   Cao's method in a straightforward manner to use more than one nearest\n   neighbors.\n\n   Syntax:\n\n     * [E, E*] = cao(pointset, query_indices, k)\n\n   Input arguments:\n\n     * pointset - a N by D double matrix containing the coordinates of\n       the point set, organized as N points of dimension D\n     * query_indices - query points are taken out of the pointset,\n       query_indices is a vector of length R which contains the indices\n       of the query points (indices may vary from 1 to N)\n     * k - number of nearest neighbors to compute. Cao's method can be\n       extended to use more than only the first nearest neighbor (k=1).\n\n   Output arguments:\n\n     * E and E* are vectors of size D. Please refer the Cao's article for\n       a precise description of their meaning.\n\n Copyright 1997-2001 DPI Goettingen, License http://www.physik3.gwdg.de/tstool/gpl.txt\n\nAdditional help for built-in functions and operators is\navailable in the online version of the manual.  Use the command\n'doc <topic>' to search the manual index.\n\nHelp and information about Octave is also available on the WWW\nat http://www.octave.org and via the help@octave.org\nmailing list.\nwarning: cao: some elements in list of return values are undefined\n'data' undefined near line 136 column 9"),
    ("HCTSA_NL_MS_nlpe", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_NL_TISEAN_c1", "Just written temporary data file tisean_temp_c1_20140512_144450_363.dat for TISEAN\nsh: c1: command not found\nCall to TISEAN method 'c1' failed"),
    ("HCTSA_NL_TISEAN_d2", "Just wrote the input time series (N = 100) to the temporary file tisean_temp_d2_20140512_144450_840.dat for TISEAN\nsh: d2: command not found\nCall to TISEAN function 'd2' failed."),
    ("HCTSA_NL_TSTL_FractalDimensions", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_NL_TSTL_GPCorrSum", "'cao' is a script from the file /home/santi/Proyectos/pyopy/pyopy/externals/toolboxes/hctsa/Toolboxes/OpenTSTOOL/tstoolbox/mex/cao.m\n\ntstoolbox/mex/cao\n   This mex-file applies Cao's method to the input data set. If the data\n   set contains points of dimension D, it computes E and E* for a data\n   set of dimension 1 (taken from the first column of the input data\n   set), then for a data set of dimension 2 (taken from the first two\n   columns) up to a dimension of D. Optionally, this algorithm extends\n   Cao's method in a straightforward manner to use more than one nearest\n   neighbors.\n\n   Syntax:\n\n     * [E, E*] = cao(pointset, query_indices, k)\n\n   Input arguments:\n\n     * pointset - a N by D double matrix containing the coordinates of\n       the point set, organized as N points of dimension D\n     * query_indices - query points are taken out of the pointset,\n       query_indices is a vector of length R which contains the indices\n       of the query points (indices may vary from 1 to N)\n     * k - number of nearest neighbors to compute. Cao's method can be\n       extended to use more than only the first nearest neighbor (k=1).\n\n   Output arguments:\n\n     * E and E* are vectors of size D. Please refer the Cao's article for\n       a precise description of their meaning.\n\n Copyright 1997-2001 DPI Goettingen, License http://www.physik3.gwdg.de/tstool/gpl.txt\n\nAdditional help for built-in functions and operators is\navailable in the online version of the manual.  Use the command\n'doc <topic>' to search the manual index.\n\nHelp and information about Octave is also available on the WWW\nat http://www.octave.org and via the help@octave.org\nmailing list.\nwarning: cao: some elements in list of return values are undefined\nCall to TSTOOL function 'cao' failedEmbedding of the 100-sample time series failed"),
    ("HCTSA_NL_TSTL_LargestLyap", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_NL_TSTL_ReturnTime", "int64 matrix cannot be indexed with {"),
    ("HCTSA_NL_TSTL_TakensEstimator", "Embedding dimension, m, incorrectly specified."),
    ("HCTSA_NL_TSTL_acp", "binary operator '>' not implemented for 'cell' by 'scalar' operations"),
    ("HCTSA_NL_TSTL_dimensions", "'cao' is a script from the file /home/santi/Proyectos/pyopy/pyopy/externals/toolboxes/hctsa/Toolboxes/OpenTSTOOL/tstoolbox/mex/cao.m\n\ntstoolbox/mex/cao\n   This mex-file applies Cao's method to the input data set. If the data\n   set contains points of dimension D, it computes E and E* for a data\n   set of dimension 1 (taken from the first column of the input data\n   set), then for a data set of dimension 2 (taken from the first two\n   columns) up to a dimension of D. Optionally, this algorithm extends\n   Cao's method in a straightforward manner to use more than one nearest\n   neighbors.\n\n   Syntax:\n\n     * [E, E*] = cao(pointset, query_indices, k)\n\n   Input arguments:\n\n     * pointset - a N by D double matrix containing the coordinates of\n       the point set, organized as N points of dimension D\n     * query_indices - query points are taken out of the pointset,\n       query_indices is a vector of length R which contains the indices\n       of the query points (indices may vary from 1 to N)\n     * k - number of nearest neighbors to compute. Cao's method can be\n       extended to use more than only the first nearest neighbor (k=1).\n\n   Output arguments:\n\n     * E and E* are vectors of size D. Please refer the Cao's article for\n       a precise description of their meaning.\n\n Copyright 1997-2001 DPI Goettingen, License http://www.physik3.gwdg.de/tstool/gpl.txt\n\nAdditional help for built-in functions and operators is\navailable in the online version of the manual.  Use the command\n'doc <topic>' to search the manual index.\n\nHelp and information about Octave is also available on the WWW\nat http://www.octave.org and via the help@octave.org\nmailing list.\nwarning: cao: some elements in list of return values are undefined\nCall to TSTOOL function 'cao' failedTime-delay embedding for TSTOOL failed"),
    ("HCTSA_NL_crptool_fnn", "A(I): index out of bounds; value 3 out of bound 2"),
    ("HCTSA_NL_embed_PCA", "Embedding time series using TSTOOL function 'embed' failed"),
    ("HCTSA_NW_VisibilityGraph", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_PD_PeriodicityWang", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_PH_Walker", "'ansaribradley' undefined near line 221 column 17"),
    ("HCTSA_PP_Compare", "'medfilt1' undefined near line 156 column 11"),
    ("HCTSA_PP_Iterate", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_PP_ModelFit", "polyfit: X and Y must be vectors of the same size"),
    ("HCTSA_PP_PreProcess", "polyfit: X and Y must be vectors of the same size"),
    ("HCTSA_SB_BinaryStats", "vertical dimensions mismatch (1x1 vs 1x99)"),
    ("HCTSA_SB_CoarseGrain", "'ng' undefined near line 84 column 38"),
    ("HCTSA_SB_MotifThree", "All values in the sequence were not assigned to a group"),
    ("HCTSA_SB_TransitionMatrix", "Some time-series values not assigned to a group"),
    ("HCTSA_SB_TransitionpAlphabet", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_SC_FluctAnal", "'buffer' undefined near line 176 column 14"),
    ("HCTSA_SD_MakeSurrogates", "'surrmethod' undefined near line 73 column 8"),
    ("HCTSA_SD_SurrogateTest", "horizontal dimensions mismatch (51x1 vs 49x1)"),
    ("HCTSA_SD_TSTL_surrogates", "Index start exceeds matrix dimensions"),
    ("HCTSA_SP_Summaries", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_ST_FitPolynomial", "polyfit: X and Y must be vectors of the same size"),
    ("HCTSA_ST_LocalExtrema", "'buffer' undefined near line 85 column 10"),
    ("HCTSA_ST_MomentCorr", "'buffer' undefined near line 107 column 10"),
    ("HCTSA_SY_DriftingMean", "Has a bug (l is not defined) and enters Oct2Py interact mode"),
    ("HCTSA_SY_KPSStest", "This function requires Matlab's Econometrics Toolbox"),
    ("HCTSA_SY_LocalDistributions", "'ksdensity' undefined near line 87 column 16"),
    ("HCTSA_SY_PPtest", "This function requires Matlab's Econometrics Toolbox"),
    ("HCTSA_SY_SlidingWindow", "'ksdensity' undefined near line 60 column 9"),
    ("HCTSA_SY_StdNthDerChange", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_SY_TISEAN_nstat_z", "int64 matrix cannot be indexed with {"),
    ("HCTSA_SY_VarRatioTest", "This function requires Matlab's Econometrics Toolbox"),
    ("HCTSA_TSTL_delaytime", "help: 'delaytime' not found"),
    ("HCTSA_TSTL_localdensity", "'cao' is a script from the file /home/santi/Proyectos/pyopy/pyopy/externals/toolboxes/hctsa/Toolboxes/OpenTSTOOL/tstoolbox/mex/cao.m\n\ntstoolbox/mex/cao\n   This mex-file applies Cao's method to the input data set. If the data\n   set contains points of dimension D, it computes E and E* for a data\n   set of dimension 1 (taken from the first column of the input data\n   set), then for a data set of dimension 2 (taken from the first two\n   columns) up to a dimension of D. Optionally, this algorithm extends\n   Cao's method in a straightforward manner to use more than one nearest\n   neighbors.\n\n   Syntax:\n\n     * [E, E*] = cao(pointset, query_indices, k)\n\n   Input arguments:\n\n     * pointset - a N by D double matrix containing the coordinates of\n       the point set, organized as N points of dimension D\n     * query_indices - query points are taken out of the pointset,\n       query_indices is a vector of length R which contains the indices\n       of the query points (indices may vary from 1 to N)\n     * k - number of nearest neighbors to compute. Cao's method can be\n       extended to use more than only the first nearest neighbor (k=1).\n\n   Output arguments:\n\n     * E and E* are vectors of size D. Please refer the Cao's article for\n       a precise description of their meaning.\n\n Copyright 1997-2001 DPI Goettingen, License http://www.physik3.gwdg.de/tstool/gpl.txt\n\nAdditional help for built-in functions and operators is\navailable in the online version of the manual.  Use the command\n'doc <topic>' to search the manual index.\n\nHelp and information about Octave is also available on the WWW\nat http://www.octave.org and via the help@octave.org\nmailing list.\nCall to TSTOOL function 'cao' failedEmbedding failed."),
    ("HCTSA_TSTL_predict", "Takes too long?"),
    ("HCTSA_WL_DetailCoeffs", "This function requires Matlab's Wavelet Toolbox"),
    ("HCTSA_WL_coeffs", "This function requires Matlab's Wavelet Toolbox"),
    ("HCTSA_WL_cwt", "This function requires Matlab's Wavelet Toolbox"),
    ("HCTSA_WL_dwtcoeff", "This function requires Matlab's Wavelet Toolbox"),
    ("HCTSA_WL_fBM", "This function requires Matlab's Wavelet Toolbox"),
    ("HCTSA_WL_scal2frq", "This function requires Matlab's Wavelet Toolbox"),
]

OK_OPS_1000 = [
    ('HCTSA_CO_AutoCorr', 0.320061),
    ('HCTSA_CO_CompareMinAMI', 0.893572),
    ('HCTSA_CO_Embed2', 0.303126),
    ('HCTSA_CO_Embed2_AngleTau', 0.582645),
    ('HCTSA_CO_Embed2_Basic', 0.196074),
    ('HCTSA_CO_FirstMin', 0.432594),
    ('HCTSA_CO_FirstZero', 0.257073),
    ('HCTSA_CO_HistogramAMI', 0.319194),
    ('HCTSA_CO_NonlinearAutocorr', 0.357883),
    ('HCTSA_CO_RM_AMInformation', 0.283905),
    ('HCTSA_CO_TranslateShape', 0.262146),
    ('HCTSA_CO_f1ecac', 1.35401),
    ('HCTSA_CO_fzcglscf', 0.272279),
    ('HCTSA_CO_glscf', 0.274791),
    ('HCTSA_CO_tc3', 0.242322),
    ('HCTSA_CO_trev', 0.277854),
    ('HCTSA_CP_ML_StepDetect', 0.355804),
    ('HCTSA_DN_Burstiness', 0.145401),
    ('HCTSA_DN_Cumulants', 0.157362),
    ('HCTSA_DN_CustomSkewness', 0.150878),
    ('HCTSA_DN_HighLowMu', 0.221284),
    ('HCTSA_DN_HistogramMode', 0.225258),
    ('HCTSA_DN_Mean', 0.241875),
    ('HCTSA_DN_MinMax', 0.155239),
    ('HCTSA_DN_Moments', 0.219979),
    ('HCTSA_DN_OutlierTest', 0.280739),
    ('HCTSA_DN_ProportionValues', 0.263643),
    ('HCTSA_DN_Quantile', 0.205498),
    ('HCTSA_DN_RemovePoints', 0.388804),
    ('HCTSA_DN_Spread', 0.259907),
    ('HCTSA_DN_Withinp', 0.220781),
    ('HCTSA_DN_cv', 0.206159),
    ('HCTSA_DN_pleft', 0.24719),
    ('HCTSA_EN_ApEn', 0.481508),
    ('HCTSA_EN_DistributionEntropy', 0.33639),
    ('HCTSA_EN_PermEn', 0.470056),
    ('HCTSA_EN_RM_entropy', 0.265787),
    ('HCTSA_EN_SampEn', 12.9311),
    ('HCTSA_EN_Shannonpdf', 0.194583),
    ('HCTSA_EN_TSentropy', 0.255716),
    ('HCTSA_EX_MovingThreshold', 0.394327),
    ('HCTSA_MD_pNN', 0.292072),
    ('HCTSA_MD_polvar', 5.79199),
    ('HCTSA_MD_rawHRVmeas', 0.226009),
    ('HCTSA_MF_arfit', 0.458019),
    ('HCTSA_NL_MS_LZcomplexity', 0.332778),
    ('HCTSA_NL_MS_fnn', 0.624671),
    ('HCTSA_NL_TSTL_PoincareSection', 0.455659),
    ('HCTSA_PH_ForcePotential', 0.46079),
    ('HCTSA_RN_Gaussian', 0.244809),
    ('HCTSA_SB_BinaryStretch', 0.257225),
    ('HCTSA_SB_MotifTwo', 0.287073),
    ('HCTSA_SC_HurstExponent', 0.237637),
    ('HCTSA_SC_fastdfa', 0.22351),
    ('HCTSA_ST_Length', 0.210638),
    ('HCTSA_ST_SimpleStats', 0.302241),
    ('HCTSA_SY_DynWin', 27.9957),
    ('HCTSA_SY_LinearTrend', 0.228614),
    ('HCTSA_SY_LocalGlobal', 12.6081),
    ('HCTSA_SY_RangeEvolve', 0.327622),
    ('HCTSA_SY_SpreadRandomLocal', 1.1953),
    ('HCTSA_SY_StatAv', 0.262726),
    ('HCTSA_SY_StdNthDer', 0.267901),
]


FAILED_OPS_1000 = [
    ("HCTSA_CO_AddNoise", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_CO_AutoCorrShape", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_CO_Embed2_Dist", "'expfit' undefined near line 96 column 5"),
    ("HCTSA_CO_Embed2_Shapes", "'poissfit' undefined near line 132 column 5"),
    ("HCTSA_CO_StickAngles", "This function requires Matlab's Signal Processing Toolbox"),
    ("HCTSA_CO_TSTL_AutoCorrMethod", "help: 'acf' not found"),
    ("HCTSA_CO_TSTL_amutual", "Input signal must be a scalar time series"),
    ("HCTSA_CO_TSTL_amutual2", "help: 'amutual2' not found"),
    ("HCTSA_CP_l1pwc_sweep_lambda", "warning: operator -: automatic broadcasting operation applied\nwarning: division by zero\nA(I) = X: X must have the same size as I"),
    ("HCTSA_CP_wavelet_varchg", "This function requires Matlab's Wavelet Toolbox"),
    ("HCTSA_DN_CompareKSFit", "'normfit' undefined near line 55 column 16"),
    ("HCTSA_DN_Compare_zscore", "'ksdensity' undefined near line 38 column 9"),
    ("HCTSA_DN_FitKernelSmooth", "'ksdensity' undefined near line 60 column 9"),
    ("HCTSA_DN_Fit_mle", "'mle' undefined near line 57 column 11"),
    ("HCTSA_DN_OutlierInclude", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_DN_SimpleFit", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_DN_TrimmedMean", "'trimmean' undefined near line 43 column 7"),
    ("HCTSA_DN_nlogL_norm", "'normfit' undefined near line 38 column 19"),
    ("HCTSA_DT_IsSeasonal", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_EN_MS_shannon", "invalid index to scalar variable."),
    ("HCTSA_EN_Randomize", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_EN_wentropy", "'wentropy' undefined near line 62 column 15"),
    ("HCTSA_FC_LocalSimple", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_FC_LoopLocalSimple", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_FC_Surprise", "All values in the sequence were not assigned to a group"),
    ("HCTSA_HT_DistributionTest", "'betafit' undefined near line 71 column 13"),
    ("HCTSA_HT_HypothesisTest", "'runstest' undefined near line 58 column 16"),
    ("HCTSA_MD_hrv_classic", "'hann' undefined near line 82 column 24"),
    ("HCTSA_MF_ARMA_orders", "Enters Oct2Py interact mode"),
    ("HCTSA_MF_AR_arcov", "'arcov' undefined near line 49 column 8"),
    ("HCTSA_MF_CompareAR", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_CompareTestSets", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_ExpSmoothing", "warning: operator -: automatic broadcasting operation applied\nA(I) = X: X must have the same size as I"),
    ("HCTSA_MF_FitSubsegments", "warning: iddata: more outputs than samples - matrice 'y' should probably be transposed\nThis function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_GARCHcompare", "This function requires Matlab's Econometrics Toolbox"),
    ("HCTSA_MF_GARCHfit", "This function requires Matlab's Econometrics Toolbox"),
    ("HCTSA_MF_GP_FitAcross", "sq_string cannot be indexed with {"),
    ("HCTSA_MF_GP_LearnHyperp", "matrix cannot be indexed with {"),
    ("HCTSA_MF_GP_LocalPrediction", "sq_string cannot be indexed with {"),
    ("HCTSA_MF_GP_hyperparameters", "warning: The input time series is not, but should be z-scored\nsq_string cannot be indexed with {"),
    ("HCTSA_MF_ResidualAnalysis", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_StateSpaceCompOrder", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_StateSpace_n4sid", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_armax", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_hmm_CompareNStates", "Data matrix length must be multiple of sequence length T"),
    ("HCTSA_MF_hmm_fit", "Data matrix length must be multiple of sequence length T"),
    ("HCTSA_MF_steps_ahead", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_NL_BoxCorrDim", "Embedding dimension, m, incorrectly specified."),
    ("HCTSA_NL_CaosMethod", "'cao' is a script from the file /home/santi/Proyectos/pyopy/pyopy/externals/toolboxes/hctsa/Toolboxes/OpenTSTOOL/tstoolbox/mex/cao.m\n\ntstoolbox/mex/cao\n   This mex-file applies Cao's method to the input data set. If the data\n   set contains points of dimension D, it computes E and E* for a data\n   set of dimension 1 (taken from the first column of the input data\n   set), then for a data set of dimension 2 (taken from the first two\n   columns) up to a dimension of D. Optionally, this algorithm extends\n   Cao's method in a straightforward manner to use more than one nearest\n   neighbors.\n\n   Syntax:\n\n     * [E, E*] = cao(pointset, query_indices, k)\n\n   Input arguments:\n\n     * pointset - a N by D double matrix containing the coordinates of\n       the point set, organized as N points of dimension D\n     * query_indices - query points are taken out of the pointset,\n       query_indices is a vector of length R which contains the indices\n       of the query points (indices may vary from 1 to N)\n     * k - number of nearest neighbors to compute. Cao's method can be\n       extended to use more than only the first nearest neighbor (k=1).\n\n   Output arguments:\n\n     * E and E* are vectors of size D. Please refer the Cao's article for\n       a precise description of their meaning.\n\n Copyright 1997-2001 DPI Goettingen, License http://www.physik3.gwdg.de/tstool/gpl.txt\n\nAdditional help for built-in functions and operators is\navailable in the online version of the manual.  Use the command\n'doc <topic>' to search the manual index.\n\nHelp and information about Octave is also available on the WWW\nat http://www.octave.org and via the help@octave.org\nmailing list.\nwarning: cao: some elements in list of return values are undefined\n'data' undefined near line 136 column 9"),
    ("HCTSA_NL_MS_nlpe", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_NL_TISEAN_c1", "Just written temporary data file tisean_temp_c1_20140512_144605_625.dat for TISEAN\nsh: c1: command not found\nCall to TISEAN method 'c1' failed"),
    ("HCTSA_NL_TISEAN_d2", "Just wrote the input time series (N = 1000) to the temporary file tisean_temp_d2_20140512_144606_089.dat for TISEAN\nsh: d2: command not found\nCall to TISEAN function 'd2' failed."),
    ("HCTSA_NL_TSTL_FractalDimensions", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_NL_TSTL_GPCorrSum", "'cao' is a script from the file /home/santi/Proyectos/pyopy/pyopy/externals/toolboxes/hctsa/Toolboxes/OpenTSTOOL/tstoolbox/mex/cao.m\n\ntstoolbox/mex/cao\n   This mex-file applies Cao's method to the input data set. If the data\n   set contains points of dimension D, it computes E and E* for a data\n   set of dimension 1 (taken from the first column of the input data\n   set), then for a data set of dimension 2 (taken from the first two\n   columns) up to a dimension of D. Optionally, this algorithm extends\n   Cao's method in a straightforward manner to use more than one nearest\n   neighbors.\n\n   Syntax:\n\n     * [E, E*] = cao(pointset, query_indices, k)\n\n   Input arguments:\n\n     * pointset - a N by D double matrix containing the coordinates of\n       the point set, organized as N points of dimension D\n     * query_indices - query points are taken out of the pointset,\n       query_indices is a vector of length R which contains the indices\n       of the query points (indices may vary from 1 to N)\n     * k - number of nearest neighbors to compute. Cao's method can be\n       extended to use more than only the first nearest neighbor (k=1).\n\n   Output arguments:\n\n     * E and E* are vectors of size D. Please refer the Cao's article for\n       a precise description of their meaning.\n\n Copyright 1997-2001 DPI Goettingen, License http://www.physik3.gwdg.de/tstool/gpl.txt\n\nAdditional help for built-in functions and operators is\navailable in the online version of the manual.  Use the command\n'doc <topic>' to search the manual index.\n\nHelp and information about Octave is also available on the WWW\nat http://www.octave.org and via the help@octave.org\nmailing list.\nwarning: cao: some elements in list of return values are undefined\nCall to TSTOOL function 'cao' failedEmbedding of the 1000-sample time series failed"),
    ("HCTSA_NL_TSTL_LargestLyap", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_NL_TSTL_ReturnTime", "int64 matrix cannot be indexed with {"),
    ("HCTSA_NL_TSTL_TakensEstimator", "Embedding dimension, m, incorrectly specified."),
    ("HCTSA_NL_TSTL_acp", "binary operator '>' not implemented for 'cell' by 'scalar' operations"),
    ("HCTSA_NL_TSTL_dimensions", "'cao' is a script from the file /home/santi/Proyectos/pyopy/pyopy/externals/toolboxes/hctsa/Toolboxes/OpenTSTOOL/tstoolbox/mex/cao.m\n\ntstoolbox/mex/cao\n   This mex-file applies Cao's method to the input data set. If the data\n   set contains points of dimension D, it computes E and E* for a data\n   set of dimension 1 (taken from the first column of the input data\n   set), then for a data set of dimension 2 (taken from the first two\n   columns) up to a dimension of D. Optionally, this algorithm extends\n   Cao's method in a straightforward manner to use more than one nearest\n   neighbors.\n\n   Syntax:\n\n     * [E, E*] = cao(pointset, query_indices, k)\n\n   Input arguments:\n\n     * pointset - a N by D double matrix containing the coordinates of\n       the point set, organized as N points of dimension D\n     * query_indices - query points are taken out of the pointset,\n       query_indices is a vector of length R which contains the indices\n       of the query points (indices may vary from 1 to N)\n     * k - number of nearest neighbors to compute. Cao's method can be\n       extended to use more than only the first nearest neighbor (k=1).\n\n   Output arguments:\n\n     * E and E* are vectors of size D. Please refer the Cao's article for\n       a precise description of their meaning.\n\n Copyright 1997-2001 DPI Goettingen, License http://www.physik3.gwdg.de/tstool/gpl.txt\n\nAdditional help for built-in functions and operators is\navailable in the online version of the manual.  Use the command\n'doc <topic>' to search the manual index.\n\nHelp and information about Octave is also available on the WWW\nat http://www.octave.org and via the help@octave.org\nmailing list.\nwarning: cao: some elements in list of return values are undefined\nCall to TSTOOL function 'cao' failedTime-delay embedding for TSTOOL failed"),
    ("HCTSA_NL_crptool_fnn", "A(I): index out of bounds; value 3 out of bound 2"),
    ("HCTSA_NL_embed_PCA", "Embedding time series using TSTOOL function 'embed' failed"),
    ("HCTSA_NW_VisibilityGraph", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_PD_PeriodicityWang", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_PH_Walker", "'ansaribradley' undefined near line 221 column 17"),
    ("HCTSA_PP_Compare", "'medfilt1' undefined near line 156 column 11"),
    ("HCTSA_PP_Iterate", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_PP_ModelFit", "polyfit: X and Y must be vectors of the same size"),
    ("HCTSA_PP_PreProcess", "polyfit: X and Y must be vectors of the same size"),
    ("HCTSA_SB_BinaryStats", "vertical dimensions mismatch (1x1 vs 1x999)"),
    ("HCTSA_SB_CoarseGrain", "'ng' undefined near line 84 column 38"),
    ("HCTSA_SB_MotifThree", "All values in the sequence were not assigned to a group"),
    ("HCTSA_SB_TransitionMatrix", "Some time-series values not assigned to a group"),
    ("HCTSA_SB_TransitionpAlphabet", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_SC_FluctAnal", "'buffer' undefined near line 176 column 14"),
    ("HCTSA_SD_MakeSurrogates", "'surrmethod' undefined near line 73 column 8"),
    ("HCTSA_SD_SurrogateTest", "horizontal dimensions mismatch (501x1 vs 499x1)"),
    ("HCTSA_SD_TSTL_surrogates", "Index start exceeds matrix dimensions"),
    ("HCTSA_SP_Summaries", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_ST_FitPolynomial", "polyfit: X and Y must be vectors of the same size"),
    ("HCTSA_ST_LocalExtrema", "'buffer' undefined near line 85 column 10"),
    ("HCTSA_ST_MomentCorr", "'buffer' undefined near line 107 column 10"),
    ("HCTSA_SY_DriftingMean", "Has a bug (l is not defined) and enters Oct2Py interact mode"),
    ("HCTSA_SY_KPSStest", "This function requires Matlab's Econometrics Toolbox"),
    ("HCTSA_SY_LocalDistributions", "'ksdensity' undefined near line 87 column 16"),
    ("HCTSA_SY_PPtest", "This function requires Matlab's Econometrics Toolbox"),
    ("HCTSA_SY_SlidingWindow", "'ksdensity' undefined near line 60 column 9"),
    ("HCTSA_SY_StdNthDerChange", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_SY_TISEAN_nstat_z", "int64 matrix cannot be indexed with {"),
    ("HCTSA_SY_VarRatioTest", "This function requires Matlab's Econometrics Toolbox"),
    ("HCTSA_TSTL_delaytime", "help: 'delaytime' not found"),
    ("HCTSA_TSTL_localdensity", "'cao' is a script from the file /home/santi/Proyectos/pyopy/pyopy/externals/toolboxes/hctsa/Toolboxes/OpenTSTOOL/tstoolbox/mex/cao.m\n\ntstoolbox/mex/cao\n   This mex-file applies Cao's method to the input data set. If the data\n   set contains points of dimension D, it computes E and E* for a data\n   set of dimension 1 (taken from the first column of the input data\n   set), then for a data set of dimension 2 (taken from the first two\n   columns) up to a dimension of D. Optionally, this algorithm extends\n   Cao's method in a straightforward manner to use more than one nearest\n   neighbors.\n\n   Syntax:\n\n     * [E, E*] = cao(pointset, query_indices, k)\n\n   Input arguments:\n\n     * pointset - a N by D double matrix containing the coordinates of\n       the point set, organized as N points of dimension D\n     * query_indices - query points are taken out of the pointset,\n       query_indices is a vector of length R which contains the indices\n       of the query points (indices may vary from 1 to N)\n     * k - number of nearest neighbors to compute. Cao's method can be\n       extended to use more than only the first nearest neighbor (k=1).\n\n   Output arguments:\n\n     * E and E* are vectors of size D. Please refer the Cao's article for\n       a precise description of their meaning.\n\n Copyright 1997-2001 DPI Goettingen, License http://www.physik3.gwdg.de/tstool/gpl.txt\n\nAdditional help for built-in functions and operators is\navailable in the online version of the manual.  Use the command\n'doc <topic>' to search the manual index.\n\nHelp and information about Octave is also available on the WWW\nat http://www.octave.org and via the help@octave.org\nmailing list.\nCall to TSTOOL function 'cao' failedEmbedding failed."),
    ("HCTSA_TSTL_predict", "Takes too long?"),
    ("HCTSA_WL_DetailCoeffs", "This function requires Matlab's Wavelet Toolbox"),
    ("HCTSA_WL_coeffs", "This function requires Matlab's Wavelet Toolbox"),
    ("HCTSA_WL_cwt", "This function requires Matlab's Wavelet Toolbox"),
    ("HCTSA_WL_dwtcoeff", "This function requires Matlab's Wavelet Toolbox"),
    ("HCTSA_WL_fBM", "This function requires Matlab's Wavelet Toolbox"),
    ("HCTSA_WL_scal2frq", "This function requires Matlab's Wavelet Toolbox"),
]

OK_OPS_10000 = [
    ('HCTSA_CO_AutoCorr', 0.327041),
    ('HCTSA_CO_CompareMinAMI', 1.33299),
    ('HCTSA_CO_Embed2', 0.329109),
    ('HCTSA_CO_Embed2_AngleTau', 0.522986),
    ('HCTSA_CO_Embed2_Basic', 0.264165),
    ('HCTSA_CO_FirstMin', 1.0625),
    ('HCTSA_CO_FirstZero', 0.252389),
    ('HCTSA_CO_HistogramAMI', 0.324954),
    ('HCTSA_CO_NonlinearAutocorr', 0.359402),
    ('HCTSA_CO_RM_AMInformation', 0.531373),
    ('HCTSA_CO_TranslateShape', 1.05127),
    ('HCTSA_CO_f1ecac', 13.4145),
    ('HCTSA_CO_fzcglscf', 0.290597),
    ('HCTSA_CO_glscf', 0.282004),
    ('HCTSA_CO_tc3', 0.24138),
    ('HCTSA_CO_trev', 0.284309),
    ('HCTSA_CP_ML_StepDetect', 0.937191),
    ('HCTSA_DN_Burstiness', 0.218952),
    ('HCTSA_DN_Cumulants', 0.255016),
    ('HCTSA_DN_CustomSkewness', 0.231606),
    ('HCTSA_DN_HighLowMu', 0.222414),
    ('HCTSA_DN_HistogramMode', 0.218776),
    ('HCTSA_DN_Mean', 0.23458),
    ('HCTSA_DN_MinMax', 0.202951),
    ('HCTSA_DN_Moments', 0.226342),
    ('HCTSA_DN_OutlierTest', 0.188375),
    ('HCTSA_DN_ProportionValues', 0.174503),
    ('HCTSA_DN_Quantile', 0.138055),
    ('HCTSA_DN_RemovePoints', 0.265464),
    ('HCTSA_DN_Spread', 0.184321),
    ('HCTSA_DN_Withinp', 0.200157),
    ('HCTSA_DN_cv', 0.216885),
    ('HCTSA_DN_pleft', 0.254722),
    ('HCTSA_EN_ApEn', 3.25431),
    ('HCTSA_EN_PermEn', 1.72157),
    ('HCTSA_EN_RM_entropy', 0.40655),
    ('HCTSA_EN_SampEn', 1255.23),
    ('HCTSA_EN_Shannonpdf', 0.212684),
    ('HCTSA_EN_TSentropy', 0.241338),
    ('HCTSA_EX_MovingThreshold', 0.797717),
    ('HCTSA_MD_pNN', 0.271222),
    ('HCTSA_MD_polvar', 52.2579),
    ('HCTSA_MD_rawHRVmeas', 0.283253),
    ('HCTSA_MF_arfit', 0.506546),
    ('HCTSA_NL_MS_LZcomplexity', 0.351099),
    ('HCTSA_NL_MS_fnn', 7.58874),
    ('HCTSA_NL_TSTL_PoincareSection', 0.480789),
    ('HCTSA_PH_ForcePotential', 1.72816),
    ('HCTSA_RN_Gaussian', 0.244376),
    ('HCTSA_SB_BinaryStretch', 0.262868),
    ('HCTSA_SB_MotifTwo', 0.288254),
    ('HCTSA_SC_HurstExponent', 0.219446),
    ('HCTSA_SC_fastdfa', 0.25098),
    ('HCTSA_ST_Length', 0.210683),
    ('HCTSA_ST_SimpleStats', 0.306041),
    ('HCTSA_SY_DynWin', 2608.7),
    ('HCTSA_SY_LinearTrend', 0.237468),
    ('HCTSA_SY_LocalGlobal', 1258.45),
    ('HCTSA_SY_RangeEvolve', 1.00805),
    ('HCTSA_SY_SpreadRandomLocal', 1.16536),
    ('HCTSA_SY_StatAv', 0.258285),
    ('HCTSA_SY_StdNthDer', 0.221028),
]


FAILED_OPS_10000 = [
    ("HCTSA_CO_AddNoise", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_CO_AutoCorrShape", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_CO_Embed2_Dist", "'expfit' undefined near line 96 column 5"),
    ("HCTSA_CO_Embed2_Shapes", "'poissfit' undefined near line 132 column 5"),
    ("HCTSA_CO_StickAngles", "This function requires Matlab's Signal Processing Toolbox"),
    ("HCTSA_CO_TSTL_AutoCorrMethod", "help: 'acf' not found"),
    ("HCTSA_CO_TSTL_amutual", "Input signal must be a scalar time series"),
    ("HCTSA_CO_TSTL_amutual2", "help: 'amutual2' not found"),
    ("HCTSA_CP_l1pwc_sweep_lambda", "warning: operator -: automatic broadcasting operation applied\nwarning: division by zero\nA(I) = X: X must have the same size as I"),
    ("HCTSA_CP_wavelet_varchg", "This function requires Matlab's Wavelet Toolbox"),
    ("HCTSA_DN_CompareKSFit", "'normfit' undefined near line 55 column 16"),
    ("HCTSA_DN_Compare_zscore", "'ksdensity' undefined near line 38 column 9"),
    ("HCTSA_DN_FitKernelSmooth", "'ksdensity' undefined near line 60 column 9"),
    ("HCTSA_DN_Fit_mle", "'mle' undefined near line 57 column 11"),
    ("HCTSA_DN_OutlierInclude", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_DN_SimpleFit", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_DN_TrimmedMean", "'trimmean' undefined near line 43 column 7"),
    ("HCTSA_DN_nlogL_norm", "'normfit' undefined near line 38 column 19"),
    ("HCTSA_DT_IsSeasonal", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_EN_DistributionEntropy", "'ksdensity' undefined near line 83 column 18"),
    ("HCTSA_EN_MS_shannon", "invalid index to scalar variable."),
    ("HCTSA_EN_Randomize", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_EN_wentropy", "'wentropy' undefined near line 62 column 15"),
    ("HCTSA_FC_LocalSimple", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_FC_LoopLocalSimple", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_FC_Surprise", "All values in the sequence were not assigned to a group"),
    ("HCTSA_HT_DistributionTest", "'betafit' undefined near line 71 column 13"),
    ("HCTSA_HT_HypothesisTest", "'runstest' undefined near line 58 column 16"),
    ("HCTSA_MD_hrv_classic", "'hann' undefined near line 82 column 24"),
    ("HCTSA_MF_ARMA_orders", "Enters Oct2Py interact mode"),
    ("HCTSA_MF_AR_arcov", "'arcov' undefined near line 49 column 8"),
    ("HCTSA_MF_CompareAR", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_CompareTestSets", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_ExpSmoothing", "Training set size exceeded maximum of 1000 samples -- reducing to this.\nwarning: operator -: automatic broadcasting operation applied\nA(I) = X: X must have the same size as I"),
    ("HCTSA_MF_FitSubsegments", "warning: iddata: more outputs than samples - matrice 'y' should probably be transposed\nThis function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_GARCHcompare", "This function requires Matlab's Econometrics Toolbox"),
    ("HCTSA_MF_GARCHfit", "This function requires Matlab's Econometrics Toolbox"),
    ("HCTSA_MF_GP_FitAcross", "sq_string cannot be indexed with {"),
    ("HCTSA_MF_GP_LearnHyperp", "matrix cannot be indexed with {"),
    ("HCTSA_MF_GP_LocalPrediction", "sq_string cannot be indexed with {"),
    ("HCTSA_MF_GP_hyperparameters", "warning: The input time series is not, but should be z-scored\nsq_string cannot be indexed with {"),
    ("HCTSA_MF_ResidualAnalysis", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_StateSpaceCompOrder", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_StateSpace_n4sid", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_armax", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_MF_hmm_CompareNStates", "Data matrix length must be multiple of sequence length T"),
    ("HCTSA_MF_hmm_fit", "Data matrix length must be multiple of sequence length T"),
    ("HCTSA_MF_steps_ahead", "This function requires Matlab's System Identification Toolbox"),
    ("HCTSA_NL_BoxCorrDim", "Embedding dimension, m, incorrectly specified."),
    ("HCTSA_NL_CaosMethod", "'cao' is a script from the file /home/santi/Proyectos/pyopy/pyopy/externals/toolboxes/hctsa/Toolboxes/OpenTSTOOL/tstoolbox/mex/cao.m\n\ntstoolbox/mex/cao\n   This mex-file applies Cao's method to the input data set. If the data\n   set contains points of dimension D, it computes E and E* for a data\n   set of dimension 1 (taken from the first column of the input data\n   set), then for a data set of dimension 2 (taken from the first two\n   columns) up to a dimension of D. Optionally, this algorithm extends\n   Cao's method in a straightforward manner to use more than one nearest\n   neighbors.\n\n   Syntax:\n\n     * [E, E*] = cao(pointset, query_indices, k)\n\n   Input arguments:\n\n     * pointset - a N by D double matrix containing the coordinates of\n       the point set, organized as N points of dimension D\n     * query_indices - query points are taken out of the pointset,\n       query_indices is a vector of length R which contains the indices\n       of the query points (indices may vary from 1 to N)\n     * k - number of nearest neighbors to compute. Cao's method can be\n       extended to use more than only the first nearest neighbor (k=1).\n\n   Output arguments:\n\n     * E and E* are vectors of size D. Please refer the Cao's article for\n       a precise description of their meaning.\n\n Copyright 1997-2001 DPI Goettingen, License http://www.physik3.gwdg.de/tstool/gpl.txt\n\nAdditional help for built-in functions and operators is\navailable in the online version of the manual.  Use the command\n'doc <topic>' to search the manual index.\n\nHelp and information about Octave is also available on the WWW\nat http://www.octave.org and via the help@octave.org\nmailing list.\nwarning: cao: some elements in list of return values are undefined\n'data' undefined near line 136 column 9"),
    ("HCTSA_NL_MS_nlpe", "Michael Small's 'nlpe' is only being evaluated on the first 3000 time-series samples...\nThis function requires Matlab's System Identification Toolbox"),
    ("HCTSA_NL_TISEAN_c1", "Just written temporary data file tisean_temp_c1_20140512_151004_409.dat for TISEAN\nsh: c1: command not found\nCall to TISEAN method 'c1' failed"),
    ("HCTSA_NL_TISEAN_d2", "Just wrote the input time series (N = 10000) to the temporary file tisean_temp_d2_20140512_151004_942.dat for TISEAN\nsh: d2: command not found\nCall to TISEAN function 'd2' failed."),
    ("HCTSA_NL_TSTL_FractalDimensions", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_NL_TSTL_GPCorrSum", "'cao' is a script from the file /home/santi/Proyectos/pyopy/pyopy/externals/toolboxes/hctsa/Toolboxes/OpenTSTOOL/tstoolbox/mex/cao.m\n\ntstoolbox/mex/cao\n   This mex-file applies Cao's method to the input data set. If the data\n   set contains points of dimension D, it computes E and E* for a data\n   set of dimension 1 (taken from the first column of the input data\n   set), then for a data set of dimension 2 (taken from the first two\n   columns) up to a dimension of D. Optionally, this algorithm extends\n   Cao's method in a straightforward manner to use more than one nearest\n   neighbors.\n\n   Syntax:\n\n     * [E, E*] = cao(pointset, query_indices, k)\n\n   Input arguments:\n\n     * pointset - a N by D double matrix containing the coordinates of\n       the point set, organized as N points of dimension D\n     * query_indices - query points are taken out of the pointset,\n       query_indices is a vector of length R which contains the indices\n       of the query points (indices may vary from 1 to N)\n     * k - number of nearest neighbors to compute. Cao's method can be\n       extended to use more than only the first nearest neighbor (k=1).\n\n   Output arguments:\n\n     * E and E* are vectors of size D. Please refer the Cao's article for\n       a precise description of their meaning.\n\n Copyright 1997-2001 DPI Goettingen, License http://www.physik3.gwdg.de/tstool/gpl.txt\n\nAdditional help for built-in functions and operators is\navailable in the online version of the manual.  Use the command\n'doc <topic>' to search the manual index.\n\nHelp and information about Octave is also available on the WWW\nat http://www.octave.org and via the help@octave.org\nmailing list.\nwarning: cao: some elements in list of return values are undefined\nCall to TSTOOL function 'cao' failedEmbedding of the 10000-sample time series failed"),
    ("HCTSA_NL_TSTL_LargestLyap", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_NL_TSTL_ReturnTime", "int64 matrix cannot be indexed with {"),
    ("HCTSA_NL_TSTL_TakensEstimator", "Embedding dimension, m, incorrectly specified."),
    ("HCTSA_NL_TSTL_acp", "binary operator '>' not implemented for 'cell' by 'scalar' operations"),
    ("HCTSA_NL_TSTL_dimensions", "'cao' is a script from the file /home/santi/Proyectos/pyopy/pyopy/externals/toolboxes/hctsa/Toolboxes/OpenTSTOOL/tstoolbox/mex/cao.m\n\ntstoolbox/mex/cao\n   This mex-file applies Cao's method to the input data set. If the data\n   set contains points of dimension D, it computes E and E* for a data\n   set of dimension 1 (taken from the first column of the input data\n   set), then for a data set of dimension 2 (taken from the first two\n   columns) up to a dimension of D. Optionally, this algorithm extends\n   Cao's method in a straightforward manner to use more than one nearest\n   neighbors.\n\n   Syntax:\n\n     * [E, E*] = cao(pointset, query_indices, k)\n\n   Input arguments:\n\n     * pointset - a N by D double matrix containing the coordinates of\n       the point set, organized as N points of dimension D\n     * query_indices - query points are taken out of the pointset,\n       query_indices is a vector of length R which contains the indices\n       of the query points (indices may vary from 1 to N)\n     * k - number of nearest neighbors to compute. Cao's method can be\n       extended to use more than only the first nearest neighbor (k=1).\n\n   Output arguments:\n\n     * E and E* are vectors of size D. Please refer the Cao's article for\n       a precise description of their meaning.\n\n Copyright 1997-2001 DPI Goettingen, License http://www.physik3.gwdg.de/tstool/gpl.txt\n\nAdditional help for built-in functions and operators is\navailable in the online version of the manual.  Use the command\n'doc <topic>' to search the manual index.\n\nHelp and information about Octave is also available on the WWW\nat http://www.octave.org and via the help@octave.org\nmailing list.\nwarning: cao: some elements in list of return values are undefined\nCall to TSTOOL function 'cao' failedTime-delay embedding for TSTOOL failed"),
    ("HCTSA_NL_crptool_fnn", "A(I): index out of bounds; value 3 out of bound 2"),
    ("HCTSA_NL_embed_PCA", "Embedding time series using TSTOOL function 'embed' failed"),
    ("HCTSA_NW_VisibilityGraph", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_PD_PeriodicityWang", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_PH_Walker", "'ansaribradley' undefined near line 221 column 17"),
    ("HCTSA_PP_Compare", "'medfilt1' undefined near line 156 column 11"),
    ("HCTSA_PP_Iterate", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_PP_ModelFit", "polyfit: X and Y must be vectors of the same size"),
    ("HCTSA_PP_PreProcess", "polyfit: X and Y must be vectors of the same size"),
    ("HCTSA_SB_BinaryStats", "vertical dimensions mismatch (1x1 vs 1x9999)"),
    ("HCTSA_SB_CoarseGrain", "'ng' undefined near line 84 column 38"),
    ("HCTSA_SB_MotifThree", "All values in the sequence were not assigned to a group"),
    ("HCTSA_SB_TransitionMatrix", "Some time-series values not assigned to a group"),
    ("HCTSA_SB_TransitionpAlphabet", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_SC_FluctAnal", "'buffer' undefined near line 176 column 14"),
    ("HCTSA_SD_MakeSurrogates", "'surrmethod' undefined near line 73 column 8"),
    ("HCTSA_SD_SurrogateTest", "horizontal dimensions mismatch (5001x1 vs 4999x1)"),
    ("HCTSA_SD_TSTL_surrogates", "Index start exceeds matrix dimensions"),
    ("HCTSA_SP_Summaries", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_ST_FitPolynomial", "polyfit: X and Y must be vectors of the same size"),
    ("HCTSA_ST_LocalExtrema", "'buffer' undefined near line 85 column 10"),
    ("HCTSA_ST_MomentCorr", "'buffer' undefined near line 107 column 10"),
    ("HCTSA_SY_DriftingMean", "Has a bug (l is not defined) and enters Oct2Py interact mode"),
    ("HCTSA_SY_KPSStest", "This function requires Matlab's Econometrics Toolbox"),
    ("HCTSA_SY_LocalDistributions", "'ksdensity' undefined near line 87 column 16"),
    ("HCTSA_SY_PPtest", "This function requires Matlab's Econometrics Toolbox"),
    ("HCTSA_SY_SlidingWindow", "'ksdensity' undefined near line 60 column 9"),
    ("HCTSA_SY_StdNthDerChange", "This function requires Matlab's Curve Fitting Toolbox"),
    ("HCTSA_SY_TISEAN_nstat_z", "int64 matrix cannot be indexed with {"),
    ("HCTSA_SY_VarRatioTest", "This function requires Matlab's Econometrics Toolbox"),
    ("HCTSA_TSTL_delaytime", "help: 'delaytime' not found"),
    ("HCTSA_TSTL_localdensity", "'cao' is a script from the file /home/santi/Proyectos/pyopy/pyopy/externals/toolboxes/hctsa/Toolboxes/OpenTSTOOL/tstoolbox/mex/cao.m\n\ntstoolbox/mex/cao\n   This mex-file applies Cao's method to the input data set. If the data\n   set contains points of dimension D, it computes E and E* for a data\n   set of dimension 1 (taken from the first column of the input data\n   set), then for a data set of dimension 2 (taken from the first two\n   columns) up to a dimension of D. Optionally, this algorithm extends\n   Cao's method in a straightforward manner to use more than one nearest\n   neighbors.\n\n   Syntax:\n\n     * [E, E*] = cao(pointset, query_indices, k)\n\n   Input arguments:\n\n     * pointset - a N by D double matrix containing the coordinates of\n       the point set, organized as N points of dimension D\n     * query_indices - query points are taken out of the pointset,\n       query_indices is a vector of length R which contains the indices\n       of the query points (indices may vary from 1 to N)\n     * k - number of nearest neighbors to compute. Cao's method can be\n       extended to use more than only the first nearest neighbor (k=1).\n\n   Output arguments:\n\n     * E and E* are vectors of size D. Please refer the Cao's article for\n       a precise description of their meaning.\n\n Copyright 1997-2001 DPI Goettingen, License http://www.physik3.gwdg.de/tstool/gpl.txt\n\nAdditional help for built-in functions and operators is\navailable in the online version of the manual.  Use the command\n'doc <topic>' to search the manual index.\n\nHelp and information about Octave is also available on the WWW\nat http://www.octave.org and via the help@octave.org\nmailing list.\nCall to TSTOOL function 'cao' failedEmbedding failed."),
    ("HCTSA_TSTL_predict", "Takes too long?"),
    ("HCTSA_WL_DetailCoeffs", "This function requires Matlab's Wavelet Toolbox"),
    ("HCTSA_WL_coeffs", "This function requires Matlab's Wavelet Toolbox"),
    ("HCTSA_WL_cwt", "This function requires Matlab's Wavelet Toolbox"),
    ("HCTSA_WL_dwtcoeff", "This function requires Matlab's Wavelet Toolbox"),
    ("HCTSA_WL_fBM", "This function requires Matlab's Wavelet Toolbox"),
    ("HCTSA_WL_scal2frq", "This function requires Matlab's Wavelet Toolbox"),
]